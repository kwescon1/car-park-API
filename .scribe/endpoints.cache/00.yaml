## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/auth/profile
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show User Details'
      description: |-
        This endpoint retrieves the details of the authenticated user.

        It returns the user's name and email as a response
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"name": "kwesi","email": "kwescon@gmail.coms"},"message": null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Df4dcek56Vbh8Zav3gE1P6a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/v1/auth/profile
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User Profile'
      description: |-
        This endpoint allows the authenticated user to update their profile information.
        The request should include the updated values for the name and email fields.
        If the update is successful, the updated profile data will be returned in the response.
        If validation fails, a 422 Unprocessable Entity status code will be returned.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The updated name of the user.'
        required: true
        example: corporis
        type: string
        custom: []
      email:
        name: email
        description: 'The updated email of the user.'
        required: true
        example: kirlin.angel@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: corporis
      email: kirlin.angel@example.net
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"name": "kwesis","email": "kwescon@gmail.coms"},"message": null}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "The email has already been taken.","errors": {"email": ["The email has already been taken."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6va3D6EV5bhgPZ1ce8ad4kf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/v1/auth/password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Password'
      description: |-
        This endpoint allows the authenticated user to update their password.
        The request should include the current password, new password, and password confirmation.
        If the update is successful, a 204 No Content response will be returned.
        If validation fails or the current password is incorrect, a 422 Unprocessable Entity status code will be returned.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      current_password:
        name: current_password
        description: 'The current password of the user.'
        required: true
        example: nulla
        type: string
        custom: []
      password:
        name: password
        description: 'The new password of the user.'
        required: true
        example: '>_d(2nc$^Gh'
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The confirmation of the new password.'
        required: true
        example: sed
        type: string
        custom: []
    cleanBodyParameters:
      current_password: nulla
      password: '>_d(2nc$^Gh'
      password_confirmation: sed
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "The current password is incorrect","errors": {"current_password": ["The current password is incorrect"]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pa6Ehfd3c8gVb5D4eaZv6k1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Logout
      description: "This endpoint allows users to log out from the application.After a successful logout, the user's session will be terminated,and they will no longer have access to protected resources"
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aak683he5DEZVv6fcbdgP14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register User'
      description: 'Register a new user with the provided information.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: cg
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: yveum@example.org
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: delectus
        type: string
        custom: []
    cleanBodyParameters:
      name: cg
      email: yveum@example.org
      password: delectus
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message": "The name field is required. (and 2 more errors)","errors": {"name": ["The name field is required."],"email": ["The email has already been taken."],"password": ["The password field confirmation does not match."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login User'
      description: |-
        Authenticate the user with the provided email and password.

        This method allows users to log in to the system by verifying their credentials.It accepts the user's email and password as parameters and performs authenticationusing the provided credentials. If the credentials are valid, the user is grantedaccess to the system and an authentication token is generated for subsequent requests.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: vonrueden.cristobal@example.net
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: eos
        type: string
        custom: []
    cleanBodyParameters:
      email: vonrueden.cristobal@example.net
      password: eos
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"access_token": "5|LbZnhjamKqR1igkHTnsq74nNtbm7By7n5GGHnK4e"},"message": "User successfully logged in."}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "The provided credentials are incorrect.","errors": {"email": ["The provided credentials are incorrect."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
